<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dealMapper">
	
	<!-- 거래 하나 가져오기 -->
	<select id="selectOneDeal" resultType = "Deal">
		SELECT *
		FROM DEAL 
		WHERE DNO = #{dno}
	</select>
	
	<!-- 상대 거래자 정보 가져오기 -->
	<select id="selectOtherMember" resultType = "Member">
		SELECT * FROM MEMBER
		WHERE USERID = #{userId}
	
	</select>
	
	<!-- 거래의 상품 하나 가져오기 -->
	<select id="selectOneProduct" resultType = "Product">
		SELECT * FROM PRODUCT
		WHERE PNO = #{pno}
	</select>
	
	<!-- 거래 중인 목록 가져오기 -->
	<select id="selectDealList" resultType = "Deal">
		SELECT * FROM DEAL 
		WHERE DSID = (#{userId} OR DBID = #{userId}) AND (DBSTATUS = 0 OR DSSTATUS = 0)
		
	</select>
	
	<!-- 거래 완료된 목록 가져오기 -->
	<select id="selectCompletedDealList" resultType = "Deal">
		SELECT * FROM DEAL 
		WHERE (DSID = #{userId} OR DBID = #{userId}) AND (DBSTATUS = 0 AND DSSTATUS = 0) 
	</select>
	
	
	
	<!-- 구매자 거래 생성 -->
	<update id = "updateBuyerDeal" parameterType = "Deal">
		UPDATE DEAL 
		SET
			DADDRESS = #{ dAddress },
			DBSTATUS = #{ dbStatus },
			DMETHOD = #{ dMethod }
		WHERE DNO = #{ dno }
	</update>
	
	<!-- 판매자 거래 생성 -->
	<update id = "updateSellerDeal" parameterType = "Deal">
		UPDATE DEAL 
		SET
			DDELNUM = #{ dDelNum },
			DSSTATUS = #{ dsStatus }
		WHERE DNO = #{ dno }
	</update>
	
	<select id="selectAdminDealList" resultType="Deal">
		SELECT D.*, P.PTITLE , (D.DDATE +10) AS EXTDATE
			FROM DEAL D 
		JOIN PRODUCT P ON P.PNO = D.PNO
        ORDER BY EXTDATE 
	</select>
	
	<select id="selectadminDealTotalContent" resultType="_int">
		SELECT COUNT(*)
		FROM DEAL
	</select>
	
	<update id="updateBuyerRefund" parameterType="Deal">
		UPDATE MEMBER 
			SET NOWPOINT = NOWPOINT + #{price}
			WHERE USERID = #{dbId}
	</update>
	
</mapper>