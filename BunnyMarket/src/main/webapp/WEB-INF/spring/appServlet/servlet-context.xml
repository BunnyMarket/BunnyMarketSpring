<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- jsonView 객체와 json 전용 viewResolver 등록하기 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- mail bean -->
	<beans:bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.naver.com" />
		<beans:property name="port" value="465" />
		<beans:property name="username" value="maybeaprils@naver.com" />
		<beans:property name="password" value="qkslakzpt123" />
		<beans:property name="protocol" value="smtps" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.ssl.checkserveridentity">true</beans:prop>
				<beans:prop key="mail.smtp.ssl.trust">*</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView" />

	<!-- @ResponseBody 사용을 위한 객체 등록 -->
	<beans:bean id="jacksonMessageConverter"
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- DispatcherServlet에서 컨트롤러로 가기 전에 동작할 객체인 인터셉터 구현하기 -->
	<interceptors>
		<interceptor>
			<!-- 인터셉터가 동작할 주소 -->
			<!-- 특정 URL 경로를 로그인 여부로 차단하기 -->
			<mapping path="/member/memberView.do" />
			<mapping path="/member/memberUpdate.do" />
			<mapping path="/auction/insertBidder.do" />
			<mapping path="/auction/auctionInsertForm.do" />
			<mapping path="/auction/auctionInsertEnd.do" />
			<mapping path="/auction/auctionDetail.do" />

			<mapping path="/product/productDetail.do" />
			<mapping path="/product/productInsert.do" />
			<mapping path="/product/productInsertEnd.do" />
			<mapping path="/product/productView.do" />
			<mapping path="/product/productUpdate.do" />
			<mapping path="/product/productDelete.do" />
			<mapping path="/product/pcommentInsert.do" />
			<mapping path="/product/pcommentUpdate.do" />
			<mapping path="/product/pcommentDelete.do" />
			
			<mapping path="/point/pointChargeView.do" />
			<mapping path="/point/pointCharge.do" />
			
			<mapping path="/report/reportDirectInsertView.do" />
			<mapping path="/report/reportInsertView.do" />
			<mapping path="/report/reportInsert.do" />
			<mapping path="/report/reportDetail.do" />
			<mapping path="/report/reportPassword.do" />
			<mapping path="/report/reportSelectOnePassword.do" />
			<mapping path="/report/reportUpdateView.do" />
			<mapping path="/report/reportUpdate.do" />
			<mapping path="/report/reportDelete.do" />
			
			<!-- <mapping path="/QNA/**/*.do" /> -->
			<!-- <exclude-mapping path="/QNA/QNAImgInsert.do" /> -->
			
			
			
			<!-- /member 로 시작하는 모든 URL경로 차단하기 -->
			<!-- <mapping path="/member/**/*.do" /> -->
			<!-- 모든 경로 차단 중 특정 경로를 제외할 수도 있다. -->
			<!-- <exclude-mapping path="/member/memberEnroll.do" /> -->

			<!-- 게시글 전용 URL 등록하기 -->
			<!-- <mapping path="/board/**/*.do" />
			<exclude-mapping path="/board/boardList.do" /> -->
			<!-- 인터셉터 등록 -->
			<beans:bean id="loginCheckInterceptor" class="com.kh.bunny.common.interceptor.LoginCheckInterceptor" />
		</interceptor>
		<interceptor>
		
			<mapping path="/admin/main/home.do"/>
			<mapping path="/admin/adminMember/adminList.do"/>
			<mapping path="/admin/adminMember/adminStatusOn.do"/>
			<mapping path="/admin/adminMember/adminStatusOff.do"/>
			<mapping path="/admin/adminMember/adminInsert.do"/>
			
			<mapping path="/admin/QNA/QnAList.do" />
			
			<beans:bean id="adminloginCheckInterceptor"
			            class="com.kh.bunny.common.interceptor.AdminLoginCheckInterceptor" />
		</interceptor>
	</interceptors>

	<!-- 파일 업로드 시에 사용할 MultipartResolver 등록하기 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760" />
		<!-- 10MB = 1024 byte => 1kb, 1024kb => 1mb * 10 = 10485760 -->
	</beans:bean>

	<context:component-scan base-package="com.kh.bunny" />

</beans:beans>

